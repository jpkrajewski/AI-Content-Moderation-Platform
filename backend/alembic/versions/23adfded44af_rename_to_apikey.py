"""rename to apikey

Revision ID: 23adfded44af
Revises: 4d46e2b92f09
Create Date: 2025-05-24 19:17:39.679490

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "23adfded44af"
down_revision: Union[str, None] = "4d46e2b92f09"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "client_api_key",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("source", sa.String(), nullable=False),
        sa.Column("client_id", sa.String(), nullable=False),
        sa.Column("api_key", sa.String(), nullable=False),
        sa.Column("current_scope", sa.ARRAY(sa.String()), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("last_accessed", sa.DateTime(), nullable=True),
        sa.Column("access_count", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("api_key"),
    )
    op.drop_table("access")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("source", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("api_key", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("current_scope", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("last_accessed", postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
        sa.Column("access_count", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("access_pkey")),
        sa.UniqueConstraint(
            "api_key", name=op.f("access_api_key_key"), postgresql_include=[], postgresql_nulls_not_distinct=False
        ),
    )
    op.drop_table("client_api_key")
    # ### end Alembic commands ###

version: '3.9'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: jakub
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: moderation_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrate:
    build:
      context: ./backend
    env_file:
      - .env
    command: alembic upgrade head

  backend:
    build:
      context: ./backend
    depends_on:
      - migrate
    env_file:
      - .env
    ports:
      - "8080:8080"
    command: python src/moderation/app.py
    volumes:
      - ./backend:/app

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  consumer:
    build:
      context: ./backend
    restart: always
    depends_on:
      - kafka
      - backend
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    command: python src/moderation/kafka/worker.py

volumes:
  postgres_data:
